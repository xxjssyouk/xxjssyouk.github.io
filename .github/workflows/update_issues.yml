- name: Update README with issues
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    REPO: ${{ github.repository }}
  run: |
    npm install axios
    node -e "
      const fs = require('fs');
      const axios = require('axios');

      (async () => {
        try {
          const res = await axios.get(`https://api.github.com/repos/${process.env.REPO}/issues?state=open`, {
            headers: { Authorization: `token ${process.env.GITHUB_TOKEN}` }
          });

          const issues = res.data.map(issue => `- [#${issue.number}](${issue.html_url}) ${issue.title}`).join('\n');

          const readme = fs.readFileSync('README.md', 'utf8');
          const newReadme = readme.replace(
            /<!-- ISSUES-START -->[\s\S]*<!-- ISSUES-END -->/,
            `<!-- ISSUES-START -->\n${issues}\n<!-- ISSUES-END -->`
          );
          fs.writeFileSync('README.md', newReadme);

          console.log('README.md updated with latest issues.');
        } catch (e) {
          console.error(e);
          process.exit(1);
        }
      })();
    "
            const issues = res.data.map(issue => `- [#${issue.number}](${issue.html_url}) ${issue.title}`).join('\n');
            let readme = fs.readFileSync('README.md', 'utf8');
            const newReadme = readme.replace(
              /<!-- ISSUES-START -->[\\s\\S]*<!-- ISSUES-END -->/,
              `<!-- ISSUES-START -->\n${issues}\n<!-- ISSUES-END -->`
            );
            fs.writeFileSync('README.md', newReadme);
            console.log('README.md updated with latest issues.');
          } catch(e) { console.error(e); process.exit(1); }
        })();
        "

    - name: Commit and Push changes
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add README.md
        git commit -m "Update issues in README" || echo "No changes to commit"
        git push
